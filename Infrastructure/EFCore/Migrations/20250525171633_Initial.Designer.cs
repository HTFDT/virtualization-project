// <auto-generated />
using Infrastructure.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525171633_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Types.RatingEntry", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PKey"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("ImageKey")
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("ThreadId")
                        .HasColumnType("integer");

                    b.HasKey("PKey");

                    b.HasIndex("ThreadId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Domain.Types.ThreadEntity", b =>
                {
                    b.Property<int>("PKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PKey"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageKey")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PKey");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("Domain.Types.RatingEntry", b =>
                {
                    b.HasOne("Domain.Types.ThreadEntity", "Thread")
                        .WithMany("Ratings")
                        .HasForeignKey("ThreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("Domain.Types.ThreadEntity", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
